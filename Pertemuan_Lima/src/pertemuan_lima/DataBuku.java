/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pertemuan_lima;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Lenovo IP 330-14IKB
 */
public class DataBuku extends javax.swing.JFrame {

    /**
     * Creates new form DataBuku
     */
    public DataBuku() {
        initComponents();
        tampilData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_IDBuku = new javax.swing.JLabel();
        lbl_Judul = new javax.swing.JLabel();
        lbl_Penulis = new javax.swing.JLabel();
        lbl_Penerbit = new javax.swing.JLabel();
        lbl_Tahun = new javax.swing.JLabel();
        tf_IDBuku = new javax.swing.JTextField();
        tf_Judul = new javax.swing.JTextField();
        tf_Penulis = new javax.swing.JTextField();
        tf_Penerbit = new javax.swing.JTextField();
        tf_Tahun = new javax.swing.JTextField();
        btn_Insert = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        ScP_Table = new javax.swing.JScrollPane();
        tbl_for_Buku = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_IDBuku.setText("ID Buku");

        lbl_Judul.setText("Judul");

        lbl_Penulis.setText("Penulis");

        lbl_Penerbit.setText("Penerbit");

        lbl_Tahun.setText("Tahun");

        tf_IDBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_IDBukuActionPerformed(evt);
            }
        });

        tf_Judul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_JudulActionPerformed(evt);
            }
        });

        tf_Penulis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_PenulisActionPerformed(evt);
            }
        });

        tf_Penerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_PenerbitActionPerformed(evt);
            }
        });

        tf_Tahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_TahunActionPerformed(evt);
            }
        });

        btn_Insert.setText("Insert");
        btn_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InsertActionPerformed(evt);
            }
        });

        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        tbl_for_Buku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Buku", "Judul", "Penulis", "Penerbit", "Tahun"
            }
        ));
        ScP_Table.setViewportView(tbl_for_Buku);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setText("TABEL BUKU PERPUSTAKAAN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_Penerbit)
                            .addComponent(lbl_Penulis, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Tahun, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_Judul)
                                .addComponent(lbl_IDBuku)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_IDBuku)
                            .addComponent(tf_Judul)
                            .addComponent(tf_Penulis)
                            .addComponent(tf_Penerbit)
                            .addComponent(tf_Tahun, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)))
                .addGap(30, 30, 30)
                .addComponent(ScP_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_IDBuku)
                            .addComponent(tf_IDBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(btn_Insert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_Judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Judul))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Penulis)
                            .addComponent(tf_Penulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Update)
                        .addGap(30, 30, 30)
                        .addComponent(btn_Delete)
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Penerbit)
                    .addComponent(tf_Penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Tahun)
                    .addComponent(tf_Tahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScP_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InsertActionPerformed
        // TODO add your handling code here:
        String id = tf_IDBuku.getText();
        String judul = tf_Judul.getText();
        String penulis = tf_Penulis.getText();
        String penerbit = tf_Penerbit.getText();
        int tahun = Integer.parseInt(tf_Tahun.getText());

        String sql = "INSERT INTO buku (id_buku, judul, penulis, penerbit, tahun) VALUES (?, ?, ?, ?, ?)";

        try (Connection conn = Koneksi.getConnection(); PreparedStatement pst = conn.prepareStatement(sql)) {

            pst.setString(1, id);
            pst.setString(2, judul);
            pst.setString(3, penulis);
            pst.setString(4, penerbit);
            pst.setInt(5, tahun);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");
                tampilData();
                clearFields();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_InsertActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        // TODO add your handling code here:
        String id = tf_IDBuku.getText();
        String judul = tf_Judul.getText();
        String penulis = tf_Penulis.getText();
        String penerbit = tf_Penerbit.getText();
        String tahunText = tf_Tahun.getText();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Buku harus diisi untuk update!");
            return;
        }

        try {
            int tahun = Integer.parseInt(tahunText);

            String sql = "UPDATE buku SET judul = ?, penulis = ?, penerbit = ?, tahun = ? WHERE id_buku = ?";

            try (Connection conn = Koneksi.getConnection(); PreparedStatement pst = conn.prepareStatement(sql)) {

                pst.setString(1, judul);
                pst.setString(2, penulis);
                pst.setString(3, penerbit);
                pst.setInt(4, tahun);
                pst.setString(5, id);

                int rows = pst.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
                    tampilData();   // refresh JTable
                    clearFields();  // kosongkan textfields
                } else {
                    JOptionPane.showMessageDialog(this, "Update gagal, ID Buku tidak ditemukan.");
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Tahun harus berupa angka!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error update: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        // TODO add your handling code here:
        String id = tf_IDBuku.getText();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Buku harus diisi untuk menghapus data!");
            return;
        }

        int konfirmasi = JOptionPane.showConfirmDialog(
                this,
                "Apakah kamu yakin ingin menghapus data dengan ID: " + id + "?",
                "Konfirmasi Hapus",
                JOptionPane.YES_NO_OPTION
        );

        if (konfirmasi == JOptionPane.YES_OPTION) {
            try {
                String sql = "DELETE FROM buku WHERE id_buku = ?";

                try (Connection conn = Koneksi.getConnection(); PreparedStatement pst = conn.prepareStatement(sql)) {

                    pst.setString(1, id);

                    int rows = pst.executeUpdate();
                    if (rows > 0) {
                        JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
                        tampilData();   // refresh JTable
                        clearFields();  // kosongkan fields
                    } else {
                        JOptionPane.showMessageDialog(this, "Hapus gagal, ID Buku tidak ditemukan.");
                    }
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error delete: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void tf_IDBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_IDBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_IDBukuActionPerformed

    private void tf_JudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_JudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_JudulActionPerformed

    private void tf_PenulisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_PenulisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_PenulisActionPerformed

    private void tf_PenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_PenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_PenerbitActionPerformed

    private void tf_TahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_TahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_TahunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBuku.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataBuku().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScP_Table;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Insert;
    private javax.swing.JButton btn_Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbl_IDBuku;
    private javax.swing.JLabel lbl_Judul;
    private javax.swing.JLabel lbl_Penerbit;
    private javax.swing.JLabel lbl_Penulis;
    private javax.swing.JLabel lbl_Tahun;
    private javax.swing.JTable tbl_for_Buku;
    private javax.swing.JTextField tf_IDBuku;
    private javax.swing.JTextField tf_Judul;
    private javax.swing.JTextField tf_Penerbit;
    private javax.swing.JTextField tf_Penulis;
    private javax.swing.JTextField tf_Tahun;
    // End of variables declaration//GEN-END:variables
    private void tampilData() {
        DefaultTableModel model = new DefaultTableModel(
                new String[]{"ID Buku", "Judul", "Penulis", "Penerbit", "Tahun"}, 0);
        try (Connection conn = Koneksi.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery("SELECT * FROM buku")) {

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_buku"),
                    rs.getString("judul"),
                    rs.getString("penulis"),
                    rs.getString("penerbit"),
                    rs.getInt("tahun")
                });
            }
            tbl_for_Buku.setModel(model); // ganti jTable1 dengan nama JTable kamu
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error tampil data: " + e.getMessage());
        }
    }

    private void clearFields() {
        tf_IDBuku.setText("");
        tf_Judul.setText("");
        tf_Penulis.setText("");
        tf_Penerbit.setText("");
        tf_Tahun.setText("");
    }
}
